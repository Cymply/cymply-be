name: Deploy Cymply API

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
#          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build and Gradle
        run: ./gradlew BootJar

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
#        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/cymply-be:latest

#      - name: Build Docker image
#        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/cymply-be .
#
#      - name: Push Docker image
#        run: docker push ${{ secrets.DOCKER_USERNAME }}/cymply-be

      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/cymply-be:latest
            docker stop cymply-be || true
            docker rm cymply-be || true
            
            cat <<EOF > /home/ubuntu/cymply.env
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }}
            KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }}
            EOF
            
            docker run -d \
              --env-file /home/ubuntu/cymply.env \
              --name cymply-be \
              -p 8080:8080 \
              ${{ secrets.DOCKER_USERNAME }}/cymply-be:latest
            
            docker image prune -f
